/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.eclipsemarkets.pbc.face.preference;

import com.eclipsemarkets.data.PointBoxQuoteCode;
import com.eclipsemarkets.pbc.face.IPbcFace;
import com.eclipsemarkets.runtime.IPointBoxPricingSettings;
import com.eclipsemarkets.web.pbc.PbcPricingModel;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Zhijun Zhang
 */
public class CurveLocationSettingsPanel extends FileSettingsPanel {

    private PointBoxQuoteCode defautCode;
    private HashMap<String, PbcPricingModel> aPbcPricingModelMap;
    private final HashMap<String, CodeBasedCurveSettingsPanel> penelMap = new HashMap<String, CodeBasedCurveSettingsPanel>();
    
    /**
     * Creates new form CurveLocationSettingsPanel
     */
    public CurveLocationSettingsPanel(IPbcFace face) {
        super(face);
        initComponents();
        aPbcPricingModelMap = face.getKernel().getPointBoxConsoleRuntime().getPbcPricingModelMap();
        
        setLayout(new java.awt.GridLayout(aPbcPricingModelMap.size(), 1, 10, 0));
        Collection<PbcPricingModel> aPbcPricingModelCollection = aPbcPricingModelMap.values();
        for (PbcPricingModel aPbcPricingModel : aPbcPricingModelCollection){
            penelMap.put(aPbcPricingModel.getSqCode(), new CodeBasedCurveSettingsPanel(face, aPbcPricingModel));
            add(penelMap.get(aPbcPricingModel.getSqCode()));
        }//for
        
        defautCode = face.getKernel().getDefaultSimCodeFromProperties();
    }
    
    void refreshTitle(){
        Collection<PbcPricingModel> aPbcPricingModelCollection = aPbcPricingModelMap.values();
        for (PbcPricingModel aPbcPricingModel : aPbcPricingModelCollection){
            penelMap.get(aPbcPricingModel.getSqCode()).refreshTitle();
        }//for
    }

    /**
     * todo-sim: the following interface methods have to be implemented
     * @return 
     */
    @Override
    List<PointBoxQuoteCode> getStandardPricingSymbolListForDownloadPricingRuntime() {
        return new ArrayList<PointBoxQuoteCode>();
    }

    @Override
    public void downloadPricingRuntimeCurveFiles(boolean displayCompleteMessage) {
        Collection<PbcPricingModel> aPbcPricingModelCollection = aPbcPricingModelMap.values();
        for (PbcPricingModel aPbcPricingModel : aPbcPricingModelCollection){
            penelMap.get(aPbcPricingModel.getSqCode()).downloadCurveFiles(false);
        }//for
        if (displayCompleteMessage){
            JOptionPane.showMessageDialog(null, "Complete downloading all the files.");
        }
    }

    @Override
    public void downloadPricingRuntimeCurveFiles(PbcPricingModel aPbcPricingModel, boolean displayCompleteMessage) {
        penelMap.get(aPbcPricingModel.getSqCode()).downloadCurveFiles(false);
        if (displayCompleteMessage){
            JOptionPane.showMessageDialog(null, "Complete downloading all the files.");
        }
    }

    @Override
    public void uploadPricingRuntimeCurveFiles() {
        Collection<PbcPricingModel> aPbcPricingModelCollection = aPbcPricingModelMap.values();
        for (PbcPricingModel aPbcPricingModel : aPbcPricingModelCollection){
            penelMap.get(aPbcPricingModel.getSqCode()).uploadCurveFiles(false);
        }//for
        JOptionPane.showMessageDialog(null, "Complete uploading all the files.");
    }

    @Override
    IPointBoxPricingSettings getPricingSettings() {
        return null;
    }

    @Override
    public void populateSettings() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void updateSettings() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridLayout(0, 1, 2, 0));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
