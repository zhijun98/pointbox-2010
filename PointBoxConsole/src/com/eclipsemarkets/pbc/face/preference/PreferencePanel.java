/**
 * Eclipse Market Solutions LLC
 *
 * PreferencePanel.java
 *
 * @author Zhijun Zhang
 * Created on May 23, 2010, 4:18:25 PM
 */

package com.eclipsemarkets.pbc.face.preference;

import com.eclipsemarkets.pbc.face.IPbcFace;
import org.jdesktop.swingx.JXTaskPaneContainer;
import java.util.ArrayList;
import javax.swing.JPanel;
import org.pushingpixels.substance.api.DecorationAreaType;
import org.pushingpixels.substance.api.SubstanceLookAndFeel;



/**
 *
 * @author Zhijun Zhang
 */
public abstract class PreferencePanel extends javax.swing.JPanel implements IPreferencePanel {
    private static final long serialVersionUID = 1L;

    final IPbcFace face;

    final JXTaskPaneContainer settingsContainer;
    
    final ArrayList<IPreferenceComponentPanel> componentPanels;

    private static PreferencePanel self;
    static {
        self = null;
    }
    
    
    /** Creates new form PreferencePanel
     * @param face
     */
    public PreferencePanel(IPbcFace face) {
        initComponents();

        this.face = face;
        componentPanels = new ArrayList<IPreferenceComponentPanel>();

        //settingsContainer
        settingsContainer = new JXTaskPaneContainer() {
            private static final long serialVersionUID = 1L;
            @Override
            public boolean getScrollableTracksViewportWidth() {
                return false;
            }
        };
        settingsContainer.setScrollableTracksViewportHeight(false);
        settingsContainer.setScrollableTracksViewportWidth(false);
        
        SubstanceLookAndFeel.setDecorationType(jScrollPane, DecorationAreaType.GENERAL);
        jScrollPane.setViewportView(settingsContainer);
    }
    
    /**
     * When preference dialog is displayed, this method will be invoked so as to get the latest settings
     */
    @Override
    public void populateSettings() {
        
        for (IPreferenceComponentPanel panel : componentPanels){
            panel.populateSettings();
        }
    }

    @Override
    public void updateSettings() {
    }
    
    @Override
    public JPanel getBasePanel() {
        return this;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();

        setPreferredSize(new java.awt.Dimension(600, 500));

        jScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane.setName("jScrollPane"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane;
    // End of variables declaration//GEN-END:variables


}
