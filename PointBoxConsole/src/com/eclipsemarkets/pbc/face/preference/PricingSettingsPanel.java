/**
 * Eclipse Market Solutions LLC
 *
 * PricingSettingsPanel.java
 *
 * @author Zhijun Zhang
 * Created on May 24, 2010, 4:43:43 PM
 */

package com.eclipsemarkets.pbc.face.preference;

import com.eclipsemarkets.storage.constant.GatewayServerType;
import com.eclipsemarkets.global.DataGlobal;
import com.eclipsemarkets.global.NIOGlobal;
import com.eclipsemarkets.pbc.face.IPbcFace;
import com.eclipsemarkets.pbc.kernel.PointBoxConsoleProperties;
import com.eclipsemarkets.release.PointBoxConfig;
import com.eclipsemarkets.runtime.IPointBoxAutoPricerConfig;
import com.eclipsemarkets.runtime.IPointBoxPricerConfig;
import java.awt.event.ItemEvent;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Zhijun Zhang
 */
class PricingSettingsPanel extends javax.swing.JPanel implements IPreferenceComponentPanel
{
    private static final long serialVersionUID = 1L;

    private final IPbcFace face;
    
    private JFileChooser fileChooser;

    /**
     * 
     * @param face
     */
    PricingSettingsPanel(IPbcFace face) {
        initComponents();
        
        this.face = face;
        
        fileChooser = new JFileChooser();

        jServerList.addItem(GatewayServerType.AIM_SERVER_TYPE);
        jServerList.addItem(GatewayServerType.YIM_SERVER_TYPE);
        jServerList.addItem(GatewayServerType.PBIM_SERVER_TYPE);
        
        jPricingRuntimeFolder.setColumns(20);
        
        jPanel1.setVisible(false);
        jPanel3.setVisible(false);
    }
    
    private IPointBoxAutoPricerConfig getAutoPricerRecord(){
        return face.getKernel().getPointBoxConsoleRuntime().getPricingEngineSettings().getAutoPricerConfig();
    }
    
    private IPointBoxPricerConfig getPricerRecord(){
        return face.getKernel().getPointBoxConsoleRuntime().getPricingEngineSettings().getPricerConfig();
    }

    @Override
    public final void populateSettings() {
        if (SwingUtilities.isEventDispatchThread()){
            populateSettingsHelper();
        }else{
            SwingUtilities.invokeLater(new Runnable(){
                @Override
                public void run() {
                    populateSettingsHelper();
                }
            });
        }
    }
    
    private void populateSettingsHelper(){
        populatePricerRecordHelper();
        populateAutoPricerRecordHelper();
        
        String location = PointBoxConsoleProperties.getSingleton().retrievePricingRuntimeFolder(face.getKernel().getPointBoxLoginUser().getIMUniqueName());
        if ((DataGlobal.isEmptyNullString(location)) && (!(new File(location)).isDirectory())){
            jPricingRuntimeFolder.setText(PointBoxConfig.getDefaultPricingRuntimeFolder());
        }else{
            jPricingRuntimeFolder.setText(location);
        }
    }

    @Override
    public void updateSettings() {
        if (SwingUtilities.isEventDispatchThread()){
            updateSettingsHelper();
        }else{
            SwingUtilities.invokeLater(new Runnable(){
                @Override
                public void run() {
                    updateSettingsHelper();
                }
            });
        }
    }
    private void updateSettingsHelper(){
    }

    private void populateAutoPricerRecordHelper(){
        if (getAutoPricerRecord().isRepricingAll()){
            jRefreshAll.setSelected(true);
        }else{
            jRefreshAll.setSelected(false);
        }
        if (getAutoPricerRecord().isRepricingStopped()){
            jStop.setSelected(true);
        }else{
            jStop.setSelected(false);
        }
        String num = Integer.toString(PointBoxConsoleProperties.getSingleton().retrievePricerRefreshQuoteNum(face.getKernel().getPointBoxLoginUser()));
        for (int i = 0; i < this.jLatestQuoteNumber.getItemCount(); i++){
            if (jLatestQuoteNumber.getItemAt(i).toString().equalsIgnoreCase(num)){
                jLatestQuoteNumber.setSelectedIndex(i);
                break;
            }
        }
        String feq = Long.toString(getAutoPricerRecord().getPricingFrequency()/1000);
        for (int i = 0; i < this.jFrequency.getItemCount(); i++){
            if (jFrequency.getItemAt(i).toString().equalsIgnoreCase(feq)){
                jFrequency.setSelectedIndex(i);
                break;
            }
        }
    }

    private void populatePricerRecordHelper(){

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ExpTValueGroup = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jServerList = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jBuddyNameList = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jFrequency = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jStop = new javax.swing.JCheckBox();
        jLatestQuoteNumber = new javax.swing.JComboBox();
        jRefreshAll = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jPricingRuntimeFolder = new javax.swing.JTextField();
        jSelectPricingSettingsLocation = new javax.swing.JButton();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Ignore Buddy's Quotes: "));
        jPanel3.setName("jPanel3"); // NOI18N

        jServerList.setName("jServerList"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jBuddyNameList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Not-Ready" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jBuddyNameList.setName("jBuddyNameList"); // NOI18N
        jScrollPane1.setViewportView(jBuddyNameList);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jServerList, javax.swing.GroupLayout.Alignment.TRAILING, 0, 163, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jServerList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Refresh Price on Viewers: "));
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText("Refresh Latest Quotes:");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText("Refresh Frequency:");
        jLabel2.setName("jLabel2"); // NOI18N

        jFrequency.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "6", "7", "8", "9", "10", "20", "30", "60", "120", "240", "360", " " }));
        jFrequency.setName("jFrequency"); // NOI18N
        jFrequency.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jFrequencyItemStateChanged(evt);
            }
        });

        jLabel3.setText("seconds");
        jLabel3.setName("jLabel3"); // NOI18N

        jStop.setText("Stop Refreshing Price");
        jStop.setName("jStop"); // NOI18N
        jStop.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jStopItemStateChanged(evt);
            }
        });

        jLatestQuoteNumber.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "25", "50", "75", "100", "125", "150", "175", "200", "250", "300", "400", "500" }));
        jLatestQuoteNumber.setName("jLatestQuoteNumber"); // NOI18N
        jLatestQuoteNumber.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jLatestQuoteNumberItemStateChanged(evt);
            }
        });

        jRefreshAll.setText("Refresh All Quotes");
        jRefreshAll.setName("jRefreshAll"); // NOI18N
        jRefreshAll.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRefreshAllItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLatestQuoteNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jStop)
                    .addComponent(jRefreshAll))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLatestQuoteNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRefreshAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jStop)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Pricing Folder:"));
        jPanel5.setName("jPanel5"); // NOI18N

        jPricingRuntimeFolder.setEditable(false);
        jPricingRuntimeFolder.setText("pricing_runtime");
        jPricingRuntimeFolder.setName("jPricingRuntimeFolder"); // NOI18N

        jSelectPricingSettingsLocation.setText("Select");
        jSelectPricingSettingsLocation.setName("jSelectPricingSettingsLocation"); // NOI18N
        jSelectPricingSettingsLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSelectPricingSettingsLocationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPricingRuntimeFolder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSelectPricingSettingsLocation)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPricingRuntimeFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSelectPricingSettingsLocation))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLatestQuoteNumberItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jLatestQuoteNumberItemStateChanged
        if (getAutoPricerRecord() == null){
            return;
        }
        if (evt.getStateChange() == ItemEvent.SELECTED){
            int num = DataGlobal.convertToInteger(evt.getItem().toString());
            if (getAutoPricerRecord().getLatestQuoteNumber() != num){
                getAutoPricerRecord().setLatestQuoteNumber(num);
                PointBoxConsoleProperties.getSingleton().storePricerRefreshQuoteNum(num, face.getKernel().getPointBoxLoginUser());
            }
        }
    }//GEN-LAST:event_jLatestQuoteNumberItemStateChanged

    private void jFrequencyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jFrequencyItemStateChanged
        if (getAutoPricerRecord() == null){
            return;
        }
        if (evt.getStateChange() == ItemEvent.SELECTED){
            int sec = DataGlobal.convertToInteger(evt.getItem().toString());
            if (getAutoPricerRecord().getPricingFrequency() != sec*1000){
                getAutoPricerRecord().setPricingFrequency(sec*1000);
            }
        }
    }//GEN-LAST:event_jFrequencyItemStateChanged

    private void jRefreshAllItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRefreshAllItemStateChanged
        if (getAutoPricerRecord() == null){
            return;
        }
        if (evt.getStateChange() == ItemEvent.SELECTED){
            if (!getAutoPricerRecord().isRepricingAll()){
                getAutoPricerRecord().setRepricingAll(true);
            }
        }

        if (evt.getStateChange() == ItemEvent.DESELECTED){
            if (getAutoPricerRecord().isRepricingAll()){
                getAutoPricerRecord().setRepricingAll(false);
            }
        }
    }//GEN-LAST:event_jRefreshAllItemStateChanged

    private void jStopItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jStopItemStateChanged
        if (getAutoPricerRecord() == null){
            return;
        }
        if (evt.getStateChange() == ItemEvent.SELECTED){
            if (!getAutoPricerRecord().isRepricingStopped()){
                getAutoPricerRecord().setRepricingStopped(true);
            }
        }

        if (evt.getStateChange() == ItemEvent.DESELECTED){
            if (getAutoPricerRecord().isRepricingStopped()){
                getAutoPricerRecord().setRepricingStopped(false);
            }
        }
    }//GEN-LAST:event_jStopItemStateChanged

    private void jSelectPricingSettingsLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSelectPricingSettingsLocationActionPerformed
        String oldPath = jPricingRuntimeFolder.getText();
        String newPath = FileSettingsPanel.getFileFromFileChooserWithLastDirectory(fileChooser, null, oldPath);
        if ((DataGlobal.isNonEmptyNullString(newPath)) && (!newPath.equalsIgnoreCase(oldPath))){
            File selectedPathFile = new File(newPath);
            if (NIOGlobal.isValidFolder(selectedPathFile)){
                jPricingRuntimeFolder.setText(newPath);
                PointBoxConsoleProperties.getSingleton().storePricingRuntimeFolder(newPath, 
                        face.getKernel().getPointBoxLoginUser().getIMUniqueName());
            }else{
                JOptionPane.showMessageDialog(null, "Please select a valid folder!");
            }
        }
    }//GEN-LAST:event_jSelectPricingSettingsLocationActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup ExpTValueGroup;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JList jBuddyNameList;
    private javax.swing.JComboBox jFrequency;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox jLatestQuoteNumber;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jPricingRuntimeFolder;
    private javax.swing.JCheckBox jRefreshAll;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSelectPricingSettingsLocation;
    private javax.swing.JComboBox jServerList;
    private javax.swing.JCheckBox jStop;
    // End of variables declaration//GEN-END:variables


}
