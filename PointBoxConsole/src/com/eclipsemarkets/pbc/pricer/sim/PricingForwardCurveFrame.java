/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.eclipsemarkets.pbc.pricer.sim;

import com.eclipsemarkets.data.PointBoxCurveType;
import com.eclipsemarkets.data.PointBoxQuoteCode;
import com.eclipsemarkets.global.CalendarGlobal;
import com.eclipsemarkets.global.NIOGlobal;
import com.eclipsemarkets.pbc.kernel.IPbcKernel;
import com.eclipsemarkets.pricer.data.IPriceCurveData;
import com.eclipsemarkets.web.pbc.PricingCurveFileSettings;
import java.awt.BorderLayout;
import java.io.IOException;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Vector;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.SwingWorker;
import javax.swing.table.TableCellEditor;

/**
 *
 * @author Zhijun Zhang
 */
public class PricingForwardCurveFrame extends AbstractPricingRuntimeCurveFrame {
    
    
    private static String SHOW_NYMEX_SETTLES_BUTTON = "Show NYMEX Settles";
    private static String HIDE_NYMEX_SETTLES_BUTTON = "Hide NYMEX Settles";

    private List<CustomForwardCurvePanel> fcPanelList = new ArrayList<CustomForwardCurvePanel>();
    
    private PricingAdjustionPanel aPricingAdjustionPanel;

    /**
     * Creates new form PricingForwardCurveFrame
     */
    public PricingForwardCurveFrame(IPbcKernel kernel, PointBoxQuoteCode code) {
        super(kernel, code);
        initComponents();
        
        initializeCurveFrame(jClassSelector, jGroupSelector, jCodeSelector);
        
        aPricingAdjustionPanel = new PricingAdjustionPanel(this);
        jAdjustionHolder.add(aPricingAdjustionPanel, BorderLayout.CENTER);
        
        CustomForwardCurvePanel customPanel;
        for(int i=0;i<12;i++){
            customPanel = new CustomForwardCurvePanel(this, i, kernel);
            fcPanelList.add(customPanel);
        }
        
        jPanel8.add(fcPanelList.get(0));
        jPanel8.add(fcPanelList.get(3));
        
        jPanel9.add(fcPanelList.get(6));
        jPanel9.add(fcPanelList.get(9));
        
        jPanel10.add(fcPanelList.get(1));
        jPanel10.add(fcPanelList.get(4));
        
        jPanel11.add(fcPanelList.get(2));
        jPanel11.add(fcPanelList.get(5));
        
        jPanel12.add(fcPanelList.get(7));
        jPanel12.add(fcPanelList.get(10));
        
        jPanel13.add(fcPanelList.get(8));
        jPanel13.add(fcPanelList.get(11));
        
        jToggleNymex.setVisible(false);
    }

    @Override
    String getFrameTitle() {
        return "Pricing Curve";
    }

    @Override
    void updateFrameForTargetCodeImpl(PointBoxQuoteCode code) {
        PricingForwardCurveTableModel model = new PricingForwardCurveTableModel(this);
        jTargetTable.setModel(model);
        jTargetTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTargetTable.getTableHeader().setReorderingAllowed(false);
        model.setUpColumns(jTargetTable);
        if (aPricingAdjustionPanel != null){
            aPricingAdjustionPanel.populateMonthInEDT();
        }
        if (fcPanelList != null){
            for (CustomForwardCurvePanel customPanel : fcPanelList){
                customPanel.updateStartEndComboBoxes();
            }
        }
    }

    @Override
    JTable getTargetTable() {
        return jTargetTable;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTargetTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jAdjustionHolder = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jClassSelector = new javax.swing.JComboBox();
        jGroupSelector = new javax.swing.JComboBox();
        jCodeSelector = new javax.swing.JComboBox();
        jToggleNymex = new javax.swing.JButton();
        jSave = new javax.swing.JButton();
        jRefresh = new javax.swing.JButton();
        jClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 600));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanel1.setLayout(new java.awt.GridLayout(1, 3));

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jTargetTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTargetTable);

        jPanel3.add(jScrollPane1);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.GridLayout(1, 2));

        jAdjustionHolder.setLayout(new java.awt.BorderLayout());
        jPanel4.add(jAdjustionHolder);

        jPanel7.setLayout(new java.awt.GridLayout(2, 1));

        jPanel8.setLayout(new java.awt.GridLayout(2, 0));
        jPanel7.add(jPanel8);

        jPanel9.setLayout(new java.awt.GridLayout(2, 0));
        jPanel7.add(jPanel9);

        jPanel4.add(jPanel7);

        jPanel1.add(jPanel4);

        jPanel5.setLayout(new java.awt.GridLayout(2, 2));

        jPanel10.setLayout(new java.awt.GridLayout(2, 0));
        jPanel5.add(jPanel10);

        jPanel11.setLayout(new java.awt.GridLayout(2, 0));
        jPanel5.add(jPanel11);

        jPanel12.setLayout(new java.awt.GridLayout(2, 0));
        jPanel5.add(jPanel12);

        jPanel13.setLayout(new java.awt.GridLayout(2, 0));
        jPanel5.add(jPanel13);

        jPanel1.add(jPanel5);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jPanel2.add(jClassSelector);

        jPanel2.add(jGroupSelector);

        jPanel2.add(jCodeSelector);

        jToggleNymex.setText("Show NYMEX Settles");
        jToggleNymex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleNymexActionPerformed(evt);
            }
        });
        jPanel2.add(jToggleNymex);

        jSave.setText("Save");
        jSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSaveActionPerformed(evt);
            }
        });
        jPanel2.add(jSave);

        jRefresh.setText("Refresh");
        jRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRefreshActionPerformed(evt);
            }
        });
        jPanel2.add(jRefresh);

        jClose.setText("Close");
        jClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCloseActionPerformed(evt);
            }
        });
        jPanel2.add(jClose);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCloseActionPerformed
        dispose();
    }//GEN-LAST:event_jCloseActionPerformed

    private void jToggleNymexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleNymexActionPerformed
        SwingWorker<Boolean, Void> worker = new SwingWorker<Boolean, Void>() {
            @Override
            protected Boolean doInBackground() throws Exception {
                String text = jToggleNymex.getText();
                if (SHOW_NYMEX_SETTLES_BUTTON.equalsIgnoreCase(text)) {
                    ((PricingForwardCurveTableModel) jTargetTable.getModel()).loadNymexSettles();
                    return true;
                } else {
                    ((PricingForwardCurveTableModel) jTargetTable.getModel()).hideNymexSettles();
                    return false;
                }
            }

            @Override
            protected void done() {
                try {
                    if (get()){
                        jToggleNymex.setText(HIDE_NYMEX_SETTLES_BUTTON);
                    }else{
                        jToggleNymex.setText(SHOW_NYMEX_SETTLES_BUTTON);
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(PricingForwardCurveFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ExecutionException ex) {
                    Logger.getLogger(PricingForwardCurveFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        };
        worker.execute();
    }//GEN-LAST:event_jToggleNymexActionPerformed

    private void jRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRefreshActionPerformed
        updateFrameForTargetCode(getTargetCode());
    }//GEN-LAST:event_jRefreshActionPerformed

    private void jSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSaveActionPerformed
        try{
            
            TableCellEditor aTableCellEditor = jTargetTable.getCellEditor();
            if (aTableCellEditor != null){
                Object obj = aTableCellEditor.getCellEditorValue();
                if (obj != null){
                    aTableCellEditor.stopCellEditing();
                }
            }
            PricingForwardCurveTableModel model = (PricingForwardCurveTableModel)jTargetTable.getModel();
            Vector<GregorianCalendar> contractDates = model.getAllContractsData();
            int rowTotal = model.getRowCount();
            String content = "";
            for (int i = 0; i < rowTotal; i++){
                content += CalendarGlobal.convertToMDYYYY(contractDates.get(i)) 
                        + "\t" + model.getValueAt(i, 1).toString()
                        + NIOGlobal.lineSeparator();
            }
            
            PricingCurveFileSettings aPricingCurveFileSettings = getKernel().retrievePricingCurveFileSettings(getTargetCode(), PointBoxCurveType.Underlier);
            String filePath = getKernel().getLocalCurveFileFullPath(getTargetCode(), aPricingCurveFileSettings, true);
            
            NIOGlobal.writeTextToNewFileUnsafely(content, filePath);
        } catch (IOException ex) {
            Logger.getLogger(PricingVolSkewSurfaceFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jSaveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jAdjustionHolder;
    private javax.swing.JComboBox jClassSelector;
    private javax.swing.JButton jClose;
    private javax.swing.JComboBox jCodeSelector;
    private javax.swing.JComboBox jGroupSelector;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton jRefresh;
    private javax.swing.JButton jSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTargetTable;
    private javax.swing.JButton jToggleNymex;
    // End of variables declaration//GEN-END:variables
    
    Vector<GregorianCalendar> getAllContractsData() {
        return ((PricingForwardCurveTableModel)jTargetTable.getModel()).getAllContractsData();
    }

    IPriceCurveData getPriceCurveData() {
        return ((PricingForwardCurveTableModel)jTargetTable.getModel()).getPriceCurveData();
    }
}
